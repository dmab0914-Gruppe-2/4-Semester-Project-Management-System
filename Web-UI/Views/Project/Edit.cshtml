@model Web_UI.Models.VMProject

@{
    ViewBag.Title = "Edit";
}

<div class="form-horizontal col-md-12 detailView">
    <h2>@Html.DisplayFor(model => model.Title)</h2>
    <p>@Html.DisplayFor(model => model.Id)</p>
    <hr />
    @using (Html.BeginForm())
    {
        @Html.AntiForgeryToken()
        @Html.ValidationSummary(true, "", new { @class = "text-danger" })
        @Html.HiddenFor(model => model.Id)

        <div class="form-group">
            @Html.LabelFor(model => model.Id, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.Id, new { htmlAttributes = new { @readonly = "readonly", @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.Id, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.Title, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.Title, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.Title, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.Done, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.CheckBoxFor(model => model.Done, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.Done, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.Description, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
               @* @Html.EditorFor(model => model.Description, new { htmlAttributes = new { @class = "form-control" } })*@
                @Html.TextAreaFor(model => model.Description, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.Description, "", new { @class = "text-danger" })
            </div>
        </div>

        <div>
            @Html.ActionLink("Back", "ProjectList", null, new { @class = "btn btn-primary" }) | <input type="submit" value="Save" class="btn btn-default" />
        </div>
    }
</div>

@section Scripts {
    @Scripts.Render("~/bundles/jqueryval")
    <script src="~/Scripts/ckeditor/ckeditor.js"></script>
    <script type="text/javascript">
        var oldText = document.getElementById("Description").value;
        var editor = CKEDITOR.instances['Description'];
        if (editor) { editor.destroy(true); }
        CKEDITOR.replace('Description', {
            enterMode: CKEDITOR.ENTER_BR,
        });
        CKEDITOR.instances['Description'].setData(oldText);
    </script>
}

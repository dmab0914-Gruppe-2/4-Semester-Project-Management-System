@model IEnumerable<Web_UI.Models.VMProject>

@{
    ViewBag.Title = "Project Page";
}

<div class="col-lg-12">
    <div class="jumbotron">
        <h1 class="page-header">Projects</h1>
    </div>
</div>
<!-- /.col-lg-12 -->
<!-- /.row -->
<div class="row">
    <div class="col-lg-5">
        <h2 id="Addtask">Your Projects</h2>
        <div class="col-lg-12" data-bind="template:{name: 'projectTask-template' , foreach: projects }">
        </div>
    </div>
    <div class="row">
        <script src="~/Scripts/Signalr/signalr-projectsTask.js"></script>

        <script type="text/html" id="projectTask-template">
            <div id="projectList" class="col-lg-12">
                <label>
                    <input class="RadioButtonItem" id="name" type="radio" name="name" data-bind="attr:{value: Id }">
                    <span data-bind="text: Title"></span>
                </label>
            </div>
        </script>

    </div>
    <!-- /.col-lg-5 Project list -->
    <div class="col-lg-7">
        <h2>Projects tasks</h2><div id="addTask"></div>
        <div id="tasks">
        </div>
    </div>
    <!-- /.col-lg-5 task info list -->
</div>
<!-- /.row -->
@section Signalr {
    <script type="text/javascript" src="~/Scripts/jquery.signalR-2.2.0.js"></script>
    <script type="text/javascript" src="~/Scripts/knockout-3.4.0.js"></script>
    <script src="~/signalr/hubs"></script>
}

@section Scripts {
    <script type="text/javascript">
        function find_key_by_value(set, value) {
            for (var k in set) {
                if (set.hasOwnProperty(k)) {
                    if (set[k] == value) {
                        return k;
                    }
                }
            }
            return undefined;
        }
    </script>
    <script type="text/javascript">
        function getTasksforProjectEvent() {
            console.log("getTasksforProjectEvent");
            $("input[name=name]:radio").change(function () {
                var pId = $("input[name=name]:checked").val();
                var StateValues = ['Done', 'Assigned', 'Unassigned', 'InProgress'];
                $.getJSON('/Project/getTasksForProject/', { projectid: pId }, function (data) {
                    var htmlStr = '';
                    $.each(data, function (k, v) {
                        var id = v.Id;

                        var btnEdit = '@Html.ActionLink(linkText: "Open task", actionName: "Edit", controllerName: "Task", routeValues: new { id = -1 }, htmlAttributes: new { @class = "btn btn-primary" })';
                        btnEdit = btnEdit.replace('-1', id);

                        var btnRemove = '@Html.ActionLink(linkText: "Remove task", actionName: "Delete", controllerName: "Task", routeValues: new { id = -1 }, htmlAttributes: new { @class = "btn btn-default" })';
                        btnRemove = btnRemove.replace('-1', id);
                        htmlStr += '<h3>' + v.Title + '<span>Status: ' + StateValues[v.Status] + '</span></h3><div class="task-list"><p>' + v.Description + '</p><br />' + btnEdit + ' | ' + btnRemove + '</div>';
                    });
                    $("#tasks").html(htmlStr);
                });
                var btn = '@Html.ActionLink(linkText: "Create new task", actionName: "Create", controllerName: "Task", routeValues: new { projectId = -1 }, htmlAttributes: new { @class = "btn btn-primary" })';
                btn = btn.replace('-1', pId);
                $("#addTask").html(btn);
            });
        }

        function tasklistChanged() {
            console.log("tasklistChanged");
            var pId = $("input[name=name]:checked").val();
            $.getJSON('/Project/getTasksForProject/', { projectid: pId }, function (data) {
                var htmlStr = '';
                $.each(data, function (k, v) {
                    var id = v.Id;

                    var btnEdit = '@Html.ActionLink(linkText: "Open task", actionName: "Edit", controllerName: "Task", routeValues: new { id = -1 }, htmlAttributes: new { @class = "btn btn-primary" })';
                    btnEdit = btnEdit.replace('-1', id);

                    var btnRemove = '@Html.ActionLink(linkText: "Remove task", actionName: "Delete", controllerName: "Task", routeValues: new { id = -1 }, htmlAttributes: new { @class = "btn btn-default" })';
                    btnRemove = btnRemove.replace('-1', id);
                    htmlStr += '<h3>' + v.Title + '</h3><div class="task-list"><p>' + v.Description + '</p><br />' + btnEdit + ' | ' + btnRemove + '</div>';
                });
                $("#tasks").html(htmlStr);
            });
            var btn = '@Html.ActionLink(linkText: "Create new task", actionName: "Create", controllerName: "Task", routeValues: new { projectId = -1 }, htmlAttributes: new { @class = "btn btn-primary" })';
            btn = btn.replace('-1', pId);
            $("#addTask").html(btn);
        };

        function clearList() {
            console.log("clear list");
            document.getElementById("addTask").innerHTML = "";
            document.getElementById("tasks").innerHTML = "";
        };
    </script>
}